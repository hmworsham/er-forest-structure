
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Process NEON waveform LiDAR
> # Author: Marshall Worsham | worsham@berkeley.edu
> # Created: 03-26-21
> # Revised: 02-23-22
> 
> ########################
> # Front matter
> ########################
> 
> # Install non-CRAN libraries
> #Sys.setenv(GDAL_DATA = '/global/home/groups/consultsw/sl-7.x86_64/modules/gdal/2.2.3/share/gdal/')
> #libproj::libproj_install_proj_data()
> #usethis::edit_r_profile() 
> #install.packages('libproj', repos = "https://paleolimbot.r-universe.dev")
> #devtools::install_github("jrminter/rPeaks") # rPeaks for deconv/decomp
> #devtools::install_github('tankwin08/waveformlidar') # waveformlidar for general processing
> #devtools::install_github('lwasser/neon-aop-package/neonAOP') #neonAOP for reading binary data
> 
> # Install and load typical libraries
> pkgs <- c('dplyr',
+           'caTools',
+           'tidyverse',
+           'data.table',
+           'devtools',
+           'doParallel',
+           'ParallelLogger',
+           'parallel',
+           'pbapply',
+           'plyr',
+           'rlist') # Name the packages you want to use here
> 
> # Function to install new packages if they're not already installed
> load.pkgs <- function(pkg){
+   new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
+   if (length(new.pkg))
+     install.packages(new.pkg, dependencies = TRUE)
+   sapply(pkg, require, character.only = TRUE)
+ } 
> # Runs the function on the list of packages defined in pkgs
> load.pkgs(pkgs)
Loading required package: dplyr

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

Loading required package: caTools
Loading required package: tidyverse
-- Attaching packages --------------------------------------- tidyverse 1.3.1 --
v ggplot2 3.3.5     v purrr   0.3.4
v tibble  3.1.6     v stringr 1.4.0
v tidyr   1.2.0     v forcats 0.5.1
v readr   1.4.0     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Loading required package: data.table

Attaching package: 'data.table'

The following object is masked from 'package:purrr':

    transpose

The following objects are masked from 'package:dplyr':

    between, first, last

Loading required package: devtools
Loading required package: usethis
Loading required package: doParallel
Loading required package: foreach

Attaching package: 'foreach'

The following objects are masked from 'package:purrr':

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: ParallelLogger

Attaching package: 'ParallelLogger'

The following objects are masked from 'package:parallel':

    clusterApply, makeCluster, stopCluster

Loading required package: pbapply
Loading required package: plyr
------------------------------------------------------------------------------
You have loaded plyr after dplyr - this is likely to cause problems.
If you need functions from both plyr and dplyr, please load plyr first, then dplyr:
library(plyr); library(dplyr)
------------------------------------------------------------------------------

Attaching package: 'plyr'

The following object is masked from 'package:purrr':

    compact

The following objects are masked from 'package:dplyr':

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

Loading required package: rlist
         dplyr        caTools      tidyverse     data.table       devtools 
          TRUE           TRUE           TRUE           TRUE           TRUE 
    doParallel ParallelLogger       parallel        pbapply           plyr 
          TRUE           TRUE           TRUE           TRUE           TRUE 
         rlist 
          TRUE 
> load_all('~/Repos/rwaveform')
i Loading rwaveform
> 
> ################################
> # Setup workspace
> ################################
> 
> # Name data directory
> datadir <- '/global/scratch/users/worsham/waveform_binary_chunks'
> 
> # Name output directory
> outdir <- '/global/scratch/users/worsham/geolocated_returns'
> 
> # Name logpath
> logpath = '/global/scratch/users/worsham/logs/batchprocesswf_log.txt'
> 
> # Name flightpaths as filenames
> flightpaths <- list.files(datadir, full.names = T)
> 
> # Get plot/LiDAR intersections
> intersectscsv <- '~/Output/EastRiver_Plot_LiDAR_Chunk_Intersections.csv'
> intersects <- read.csv(intersectscsv)
> names(intersects) <- str_replace(names(intersects), '\\.', '-')
> 
> # Subset flightpaths intersecting forest
> forestcsv <- '~/Output/flightpath_forest_intersections.csv'
> forest <- read.csv(forestcsv)
> isforest <- which(forest$pct_forest > 0.05)
> flightpaths <- flightpaths[isforest]
> 
> ###############################################################
> # Process waveforms at forested flightpaths on multiple cores
> ###############################################################
> # clearLoggers()
> # lapply(flightpaths[2:30], rwaveform::process_wf, logpath, outdir)
> # process_wf(flightpaths[1], logpath, outdir)
> 
> ###############################################################
> # Process waveforms at forested flightpaths on multiple nodes
> ###############################################################
> 
> workernodes <- system('srun hostname', intern = TRUE)
> cl <- parallel::makeCluster(
+   workernodes,
+   type='FORK',
+   methods=F)
Error in makeForkCluster(nnodes = spec, ...) : 'nnodes' must be >= 1
Calls: <Anonymous> -> makeForkCluster
In addition: Warning message:
In makeForkCluster(nnodes = spec, ...) : NAs introduced by coercion
Execution halted
